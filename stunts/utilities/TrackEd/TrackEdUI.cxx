// generated by Fast Light User Interface Designer (fluid) version 1.0102

#include "TrackEdUI.h"

inline void CTrackEdUI::cb_corner_big_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "corner_big_nw" ) {
		o->tooltip( "corner_big_ne" );
		o->image( img["corner_big_ne"] );
	} else if( o->tooltip() == "corner_big_ne" ) {
		o->tooltip( "corner_big_se" );
		o->image( img["corner_big_se"] );
	} else if( o->tooltip() == "corner_big_se" ) {
		o->tooltip( "corner_big_sw" );
		o->image( img["corner_big_sw"] );
	} else if( o->tooltip() == "corner_big_sw" ) {
		o->tooltip( "corner_big_nw" );
		o->image( img["corner_big_nw"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "corner_big_ne" ) {
		o->tooltip( "corner_big_nw" );
		o->image( img["corner_big_nw"] );
	} else if( o->tooltip() == "corner_big_se" ) {
		o->tooltip( "corner_big_ne" );
		o->image( img["corner_big_ne"] );
	} else if( o->tooltip() == "corner_big_sw" ) {
		o->tooltip( "corner_big_se" );
		o->image( img["corner_big_se"] );
	} else if( o->tooltip() == "corner_big_nw" ) {
		o->tooltip( "corner_big_sw" );
		o->image( img["corner_big_sw"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_corner_big(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_corner_big_i(o,v);
}

inline void CTrackEdUI::cb_corner_small_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "corner_small_nw" ) {
		o->tooltip( "corner_small_ne" );
		o->image( img["corner_small_ne"] );
	} else if( o->tooltip() == "corner_small_ne" ) {
		o->tooltip( "corner_small_se" );
		o->image( img["corner_small_se"] );
	} else if( o->tooltip() == "corner_small_se" ) {
		o->tooltip( "corner_small_sw" );
		o->image( img["corner_small_sw"] );
	} else if( o->tooltip() == "corner_small_sw" ) {
		o->tooltip( "corner_small_nw" );
		o->image( img["corner_small_nw"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "corner_small_ne" ) {
		o->tooltip( "corner_small_nw" );
		o->image( img["corner_small_nw"] );
	} else if( o->tooltip() == "corner_small_se" ) {
		o->tooltip( "corner_small_ne" );
		o->image( img["corner_small_ne"] );
	} else if( o->tooltip() == "corner_small_sw" ) {
		o->tooltip( "corner_small_se" );
		o->image( img["corner_small_se"] );
	} else if( o->tooltip() == "corner_small_nw" ) {
		o->tooltip( "corner_small_sw" );
		o->image( img["corner_small_sw"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_corner_small(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_corner_small_i(o,v);
}

inline void CTrackEdUI::cb_straight_line_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() ) {
	if( o->tooltip() == "straight_line_v" ) {
		o->tooltip( "straight_line_h" );
		o->image( img["straight_line_h"] );
	} else if( o->tooltip() == "straight_line_h" ) {
		o->tooltip( "straight_line_v" );
		o->image( img["straight_line_v"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_straight_line(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_straight_line_i(o,v);
}

inline void CTrackEdUI::cb_empty_i(Fl_Button* o, void*) {
  Selected->tooltip( o->tooltip() );
Selected->image( o->image() );
Selected->redraw();
}
void CTrackEdUI::cb_empty(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_empty_i(o,v);
}

inline void CTrackEdUI::cb_cellTemplate_i(Fl_Button* o, void*) {
  // o->image() == Selected->image() ||
if( Fl::event_button() == FL_RIGHT_MOUSE ) {
	clearCells( o );
} else {
	setCells( o );
};
}
void CTrackEdUI::cb_cellTemplate(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_cellTemplate_i(o,v);
}

inline void CTrackEdUI::cb_start_goal_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() ) {
	if( o->tooltip() == "start_goal_v" ) {
		o->tooltip( "start_goal_h" );
		o->image( img["start_goal_h"] );
	} else if( o->tooltip() == "start_goal_h" ) {
		o->tooltip( "start_goal_v" );
		o->image( img["start_goal_v"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_start_goal(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_start_goal_i(o,v);
}

inline void CTrackEdUI::cb_tube_inout_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "tube_in_v" ) {
		o->tooltip( "tube_in_h" );
		o->image( img["tube_in_h"] );
	} else if( o->tooltip() == "tube_in_h" ) {
		o->tooltip( "tube_out_v" );
		o->image( img["tube_out_v"] );
	} else if( o->tooltip() == "tube_out_v" ) {
		o->tooltip( "tube_out_h" );
		o->image( img["tube_out_h"] );
	} else if( o->tooltip() == "tube_out_h" ) {
		o->tooltip( "tube_in_v" );
		o->image( img["tube_in_v"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "tube_in_v" ) {
		o->tooltip( "tube_out_h" );
		o->image( img["tube_out_h"] );
	} else if( o->tooltip() == "tube_out_h" ) {
		o->tooltip( "tube_out_v" );
		o->image( img["tube_out_v"] );
	} else if( o->tooltip() == "tube_out_v" ) {
		o->tooltip( "tube_in_h" );
		o->image( img["tube_in_h"] );
	} else if( o->tooltip() == "tube_in_h" ) {
		o->tooltip( "tube_in_v" );
		o->image( img["tube_in_v"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_tube_inout(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_tube_inout_i(o,v);
}

inline void CTrackEdUI::cb_tube_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() ) {
	if( o->tooltip() == "tube_h" ) {
		o->tooltip( "tube_v" );
		o->image( img["tube_v"] );
	} else if( o->tooltip() == "tube_v" ) {
		o->tooltip( "tube_h" );
		o->image( img["tube_h"] );
	} 
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_tube(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_tube_i(o,v);
}

inline void CTrackEdUI::cb_tube_with_wall_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() ) {
	if( o->tooltip() == "tube_with_wall_h" ) {
		o->tooltip( "tube_with_wall_v" );
		o->image( img["tube_with_wall_v"] );
	} else if( o->tooltip() == "tube_with_wall_v" ) {
		o->tooltip( "tube_with_wall_h" );
		o->image( img["tube_with_wall_h"] );
	} 
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_tube_with_wall(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_tube_with_wall_i(o,v);
}

inline void CTrackEdUI::cb_tunnel_inout_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "tunnel_in_v" ) {
		o->tooltip( "tunnel_in_h" );
		o->image( img["tunnel_in_h"] );
	} else if( o->tooltip() == "tunnel_in_h" ) {
		o->tooltip( "tunnel_out_v" );
		o->image( img["tunnel_out_v"] );
	} else if( o->tooltip() == "tunnel_out_v" ) {
		o->tooltip( "tunnel_out_h" );
		o->image( img["tunnel_out_h"] );
	} else if( o->tooltip() == "tunnel_out_h" ) {
		o->tooltip( "tunnel_in_v" );
		o->image( img["tunnel_in_v"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "tunnel_in_v" ) {
		o->tooltip( "tunnel_out_h" );
		o->image( img["tunnel_out_h"] );
	} else if( o->tooltip() == "tunnel_out_h" ) {
		o->tooltip( "tunnel_out_v" );
		o->image( img["tunnel_out_v"] );
	} else if( o->tooltip() == "tunnel_out_v" ) {
		o->tooltip( "tunnel_in_h" );
		o->image( img["tunnel_in_h"] );
	} else if( o->tooltip() == "tunnel_in_h" ) {
		o->tooltip( "tunnel_in_v" );
		o->image( img["tunnel_in_v"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_tunnel_inout(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_tunnel_inout_i(o,v);
}

inline void CTrackEdUI::cb_tunnel_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() ) {
	if( o->tooltip() == "tunnel_h" ) {
		o->tooltip( "tunnel_v" );
		o->image( img["tunnel_v"] );
	} else if( o->tooltip() == "tunnel_v" ) {
		o->tooltip( "tunnel_h" );
		o->image( img["tunnel_h"] );
	} 
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_tunnel(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_tunnel_i(o,v);
}

inline void CTrackEdUI::cb_y_split_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "y_sn" ) {
		o->tooltip( "y_we" );
		o->image( img["y_we"] );
	} else if( o->tooltip() == "y_we" ) {
		o->tooltip( "y_ns" );
		o->image( img["y_ns"] );
	} else if( o->tooltip() == "y_ns" ) {
		o->tooltip( "y_ew" );
		o->image( img["y_ew"] );
	} else if( o->tooltip() == "y_ew" ) {
		o->tooltip( "y_sn" );
		o->image( img["y_sn"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "y_sn" ) {
		o->tooltip( "y_ew" );
		o->image( img["y_ew"] );
	} else if( o->tooltip() == "y_ew" ) {
		o->tooltip( "y_ns" );
		o->image( img["y_ns"] );
	} else if( o->tooltip() == "y_ns" ) {
		o->tooltip( "y_we" );
		o->image( img["y_we"] );
	} else if( o->tooltip() == "y_we" ) {
		o->tooltip( "y_sn" );
		o->image( img["y_sn"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_y_split(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_y_split_i(o,v);
}

inline void CTrackEdUI::cb_y_split_b_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "y_b_sn" ) {
		o->tooltip( "y_b_we" );
		o->image( img["y_b_we"] );
	} else if( o->tooltip() == "y_b_we" ) {
		o->tooltip( "y_b_ns" );
		o->image( img["y_b_ns"] );
	} else if( o->tooltip() == "y_b_ns" ) {
		o->tooltip( "y_b_ew" );
		o->image( img["y_b_ew"] );
	} else if( o->tooltip() == "y_b_ew" ) {
		o->tooltip( "y_b_sn" );
		o->image( img["y_b_sn"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "y_b_sn" ) {
		o->tooltip( "y_b_ew" );
		o->image( img["y_b_ew"] );
	} else if( o->tooltip() == "y_b_ew" ) {
		o->tooltip( "y_b_ns" );
		o->image( img["y_b_ns"] );
	} else if( o->tooltip() == "y_b_ns" ) {
		o->tooltip( "y_b_we" );
		o->image( img["y_b_we"] );
	} else if( o->tooltip() == "y_b_we" ) {
		o->tooltip( "y_b_sn" );
		o->image( img["y_b_sn"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_y_split_b(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_y_split_b_i(o,v);
}

inline void CTrackEdUI::cb_screw_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() ) {
	if( o->tooltip() == "screw_h" ) {
		o->tooltip( "screw_v" );
		o->image( img["screw_v"] );
	} else if( o->tooltip() == "screw_v" ) {
		o->tooltip( "screw_h" );
		o->image( img["screw_h"] );
	} 
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_screw(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_screw_i(o,v);
}

inline void CTrackEdUI::cb_corner_bridge_big_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "corner_bridge_big_nw" ) {
		o->tooltip( "corner_bridge_big_ne" );
		o->image( img["corner_bridge_big_ne"] );
	} else if( o->tooltip() == "corner_bridge_big_ne" ) {
		o->tooltip( "corner_bridge_big_se" );
		o->image( img["corner_bridge_big_se"] );
	} else if( o->tooltip() == "corner_bridge_big_se" ) {
		o->tooltip( "corner_bridge_big_sw" );
		o->image( img["corner_bridge_big_sw"] );
	} else if( o->tooltip() == "corner_bridge_big_sw" ) {
		o->tooltip( "corner_bridge_big_nw" );
		o->image( img["corner_bridge_big_nw"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "corner_bridge_big_ne" ) {
		o->tooltip( "corner_bridge_big_nw" );
		o->image( img["corner_bridge_big_nw"] );
	} else if( o->tooltip() == "corner_bridge_big_se" ) {
		o->tooltip( "corner_bridge_big_ne" );
		o->image( img["corner_bridge_big_ne"] );
	} else if( o->tooltip() == "corner_bridge_big_sw" ) {
		o->tooltip( "corner_bridge_big_se" );
		o->image( img["corner_bridge_big_se"] );
	} else if( o->tooltip() == "corner_bridge_big_nw" ) {
		o->tooltip( "corner_bridge_big_sw" );
		o->image( img["corner_bridge_big_sw"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_corner_bridge_big(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_corner_bridge_big_i(o,v);
}

inline void CTrackEdUI::cb_corner_bridge_small_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "corner_bridge_small_nw" ) {
		o->tooltip( "corner_bridge_small_ne" );
		o->image( img["corner_bridge_small_ne"] );
	} else if( o->tooltip() == "corner_bridge_small_ne" ) {
		o->tooltip( "corner_bridge_small_se" );
		o->image( img["corner_bridge_small_se"] );
	} else if( o->tooltip() == "corner_bridge_small_se" ) {
		o->tooltip( "corner_bridge_small_sw" );
		o->image( img["corner_bridge_small_sw"] );
	} else if( o->tooltip() == "corner_bridge_small_sw" ) {
		o->tooltip( "corner_bridge_small_nw" );
		o->image( img["corner_bridge_small_nw"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "corner_bridge_small_ne" ) {
		o->tooltip( "corner_bridge_small_nw" );
		o->image( img["corner_bridge_small_nw"] );
	} else if( o->tooltip() == "corner_bridge_small_se" ) {
		o->tooltip( "corner_bridge_small_ne" );
		o->image( img["corner_bridge_small_ne"] );
	} else if( o->tooltip() == "corner_bridge_small_sw" ) {
		o->tooltip( "corner_bridge_small_se" );
		o->image( img["corner_bridge_small_se"] );
	} else if( o->tooltip() == "corner_bridge_small_nw" ) {
		o->tooltip( "corner_bridge_small_sw" );
		o->image( img["corner_bridge_small_sw"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_corner_bridge_small(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_corner_bridge_small_i(o,v);
}

inline void CTrackEdUI::cb_corner_bridge_big_b_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "corner_bridge_big_b_nw" ) {
		o->tooltip( "corner_bridge_big_b_ne" );
		o->image( img["corner_bridge_big_b_ne"] );
	} else if( o->tooltip() == "corner_bridge_big_b_ne" ) {
		o->tooltip( "corner_bridge_big_b_se" );
		o->image( img["corner_bridge_big_b_se"] );
	} else if( o->tooltip() == "corner_bridge_big_b_se" ) {
		o->tooltip( "corner_bridge_big_b_sw" );
		o->image( img["corner_bridge_big_b_sw"] );
	} else if( o->tooltip() == "corner_bridge_big_b_sw" ) {
		o->tooltip( "corner_bridge_big_b_nw" );
		o->image( img["corner_bridge_big_b_nw"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "corner_bridge_big_b_ne" ) {
		o->tooltip( "corner_bridge_big_b_nw" );
		o->image( img["corner_bridge_big_b_nw"] );
	} else if( o->tooltip() == "corner_bridge_big_b_se" ) {
		o->tooltip( "corner_bridge_big_b_ne" );
		o->image( img["corner_bridge_big_b_ne"] );
	} else if( o->tooltip() == "corner_bridge_big_b_sw" ) {
		o->tooltip( "corner_bridge_big_b_se" );
		o->image( img["corner_bridge_big_b_se"] );
	} else if( o->tooltip() == "corner_bridge_big_b_nw" ) {
		o->tooltip( "corner_bridge_big_b_sw" );
		o->image( img["corner_bridge_big_b_sw"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_corner_bridge_big_b(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_corner_bridge_big_b_i(o,v);
}

inline void CTrackEdUI::cb_corner_bridge_small_b_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "corner_bridge_small_b_nw" ) {
		o->tooltip( "corner_bridge_small_b_ne" );
		o->image( img["corner_bridge_small_b_ne"] );
	} else if( o->tooltip() == "corner_bridge_small_b_ne" ) {
		o->tooltip( "corner_bridge_small_b_se" );
		o->image( img["corner_bridge_small_b_se"] );
	} else if( o->tooltip() == "corner_bridge_small_b_se" ) {
		o->tooltip( "corner_bridge_small_b_sw" );
		o->image( img["corner_bridge_small_b_sw"] );
	} else if( o->tooltip() == "corner_bridge_small_b_sw" ) {
		o->tooltip( "corner_bridge_small_b_nw" );
		o->image( img["corner_bridge_small_b_nw"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "corner_bridge_small_b_ne" ) {
		o->tooltip( "corner_bridge_small_b_nw" );
		o->image( img["corner_bridge_small_b_nw"] );
	} else if( o->tooltip() == "corner_bridge_small_b_se" ) {
		o->tooltip( "corner_bridge_small_b_ne" );
		o->image( img["corner_bridge_small_b_ne"] );
	} else if( o->tooltip() == "corner_bridge_small_b_sw" ) {
		o->tooltip( "corner_bridge_small_b_se" );
		o->image( img["corner_bridge_small_b_se"] );
	} else if( o->tooltip() == "corner_bridge_small_b_nw" ) {
		o->tooltip( "corner_bridge_small_b_sw" );
		o->image( img["corner_bridge_small_b_sw"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_corner_bridge_small_b(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_corner_bridge_small_b_i(o,v);
}

inline void CTrackEdUI::cb_straight_line_bridge_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "straight_line_bridge_b_v" ) {
		o->tooltip( "straight_line_bridge_h" );
		o->image( img["straight_line_bridge_h"] );
	} else if( o->tooltip() == "straight_line_bridge_h" ) {
		o->tooltip( "straight_line_bridge_v" );
		o->image( img["straight_line_bridge_v"] );
	} else if( o->tooltip() == "straight_line_bridge_v" ) {
		o->tooltip( "straight_line_bridge_b_h" );
		o->image( img["straight_line_bridge_b_h"] );
	} else if( o->tooltip() == "straight_line_bridge_b_h" ) {
		o->tooltip( "straight_line_bridge_b_v" );
		o->image( img["straight_line_bridge_b_v"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "straight_line_bridge_b_h" ) {
		o->tooltip( "straight_line_bridge_v" );
		o->image( img["straight_line_bridge_v"] );
	} else if( o->tooltip() == "straight_line_bridge_v" ) {
		o->tooltip( "straight_line_bridge_h" );
		o->image( img["straight_line_bridge_h"] );
	} else if( o->tooltip() == "straight_line_bridge_h" ) {
		o->tooltip( "straight_line_bridge_b_v" );
		o->image( img["straight_line_bridge_b_v"] );
	} else if( o->tooltip() == "straight_line_bridge_b_v" ) {
		o->tooltip( "straight_line_bridge_b_h" );
		o->image( img["straight_line_bridge_b_h"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_straight_line_bridge(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_straight_line_bridge_i(o,v);
}

inline void CTrackEdUI::cb_drive_down_bridge_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "drive_down_bridge_b_v" ) {
		o->tooltip( "drive_down_bridge_h" );
		o->image( img["drive_down_bridge_h"] );
	} else if( o->tooltip() == "drive_down_bridge_h" ) {
		o->tooltip( "drive_down_bridge_v" );
		o->image( img["drive_down_bridge_v"] );
	} else if( o->tooltip() == "drive_down_bridge_v" ) {
		o->tooltip( "drive_down_bridge_b_h" );
		o->image( img["drive_down_bridge_b_h"] );
	} else if( o->tooltip() == "drive_down_bridge_b_h" ) {
		o->tooltip( "drive_down_bridge_b_v" );
		o->image( img["drive_down_bridge_b_v"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "drive_down_bridge_b_h" ) {
		o->tooltip( "drive_down_bridge_v" );
		o->image( img["drive_down_bridge_v"] );
	} else if( o->tooltip() == "drive_down_bridge_v" ) {
		o->tooltip( "drive_down_bridge_h" );
		o->image( img["drive_down_bridge_h"] );
	} else if( o->tooltip() == "drive_down_bridge_h" ) {
		o->tooltip( "drive_down_bridge_b_v" );
		o->image( img["drive_down_bridge_b_v"] );
	} else if( o->tooltip() == "drive_down_bridge_b_v" ) {
		o->tooltip( "drive_down_bridge_b_h" );
		o->image( img["drive_down_bridge_b_h"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_drive_down_bridge(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_drive_down_bridge_i(o,v);
}

inline void CTrackEdUI::cb_drive_up_bridge_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "drive_up_bridge_b_v" ) {
		o->tooltip( "drive_up_bridge_h" );
		o->image( img["drive_up_bridge_h"] );
	} else if( o->tooltip() == "drive_up_bridge_h" ) {
		o->tooltip( "drive_up_bridge_v" );
		o->image( img["drive_up_bridge_v"] );
	} else if( o->tooltip() == "drive_up_bridge_v" ) {
		o->tooltip( "drive_up_bridge_b_h" );
		o->image( img["drive_up_bridge_b_h"] );
	} else if( o->tooltip() == "drive_up_bridge_b_h" ) {
		o->tooltip( "drive_up_bridge_b_v" );
		o->image( img["drive_up_bridge_b_v"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "drive_up_bridge_b_h" ) {
		o->tooltip( "drive_up_bridge_v" );
		o->image( img["drive_up_bridge_v"] );
	} else if( o->tooltip() == "drive_up_bridge_v" ) {
		o->tooltip( "drive_up_bridge_h" );
		o->image( img["drive_up_bridge_h"] );
	} else if( o->tooltip() == "drive_up_bridge_h" ) {
		o->tooltip( "drive_up_bridge_b_v" );
		o->image( img["drive_up_bridge_b_v"] );
	} else if( o->tooltip() == "drive_up_bridge_b_v" ) {
		o->tooltip( "drive_up_bridge_b_h" );
		o->image( img["drive_up_bridge_b_h"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_drive_up_bridge(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_drive_up_bridge_i(o,v);
}

inline void CTrackEdUI::cb_crossover_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "crossover_b_v" ) {
		o->tooltip( "crossover_h" );
		o->image( img["crossover_h"] );
	} else if( o->tooltip() == "crossover_h" ) {
		o->tooltip( "crossover_v" );
		o->image( img["crossover_v"] );
	} else if( o->tooltip() == "crossover_v" ) {
		o->tooltip( "crossover_b_h" );
		o->image( img["crossover_b_h"] );
	} else if( o->tooltip() == "crossover_b_h" ) {
		o->tooltip( "crossover_b_v" );
		o->image( img["crossover_b_v"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "crossover_b_h" ) {
		o->tooltip( "crossover_v" );
		o->image( img["crossover_v"] );
	} else if( o->tooltip() == "crossover_v" ) {
		o->tooltip( "crossover_h" );
		o->image( img["crossover_h"] );
	} else if( o->tooltip() == "crossover_h" ) {
		o->tooltip( "crossover_b_v" );
		o->image( img["crossover_b_v"] );
	} else if( o->tooltip() == "crossover_b_v" ) {
		o->tooltip( "crossover_b_h" );
		o->image( img["crossover_b_h"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_crossover(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_crossover_i(o,v);
}

inline void CTrackEdUI::cb_jump_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "jump_sn" ) {
		o->tooltip( "jump_we" );
		o->image( img["jump_we"] );
	} else if( o->tooltip() == "jump_we" ) {
		o->tooltip( "jump_ns" );
		o->image( img["jump_ns"] );
	} else if( o->tooltip() == "jump_ns" ) {
		o->tooltip( "jump_ew" );
		o->image( img["jump_ew"] );
	} else if( o->tooltip() == "jump_ew" ) {
		o->tooltip( "jump_sn" );
		o->image( img["jump_sn"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "jump_sn" ) {
		o->tooltip( "jump_ew" );
		o->image( img["jump_ew"] );
	} else if( o->tooltip() == "jump_ew" ) {
		o->tooltip( "jump_ns" );
		o->image( img["jump_ns"] );
	} else if( o->tooltip() == "jump_ns" ) {
		o->tooltip( "jump_we" );
		o->image( img["jump_we"] );
	} else if( o->tooltip() == "jump_we" ) {
		o->tooltip( "jump_sn" );
		o->image( img["jump_sn"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_jump(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_jump_i(o,v);
}

inline void CTrackEdUI::cb_loop_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() ) {
	if( o->tooltip() == "loop_h" ) {
		o->tooltip( "loop_v" );
		o->image( img["loop_v"] );
	} else if( o->tooltip() == "loop_v" ) {
		o->tooltip( "loop_h" );
		o->image( img["loop_h"] );
	} 
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_loop(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_loop_i(o,v);
}

inline void CTrackEdUI::cb_cactus_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "cactus_n" ) {
		o->tooltip( "cactus_e" );
		o->image( img["cactus_e"] );
	} else if( o->tooltip() == "cactus_e" ) {
		o->tooltip( "cactus_s" );
		o->image( img["cactus_s"] );
	} else if( o->tooltip() == "cactus_s" ) {
		o->tooltip( "cactus_w" );
		o->image( img["cactus_w"] );
	} else if( o->tooltip() == "cactus_w" ) {
		o->tooltip( "cactus_n" );
		o->image( img["cactus_n"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "cactus_n" ) {
		o->tooltip( "cactus_w" );
		o->image( img["cactus_w"] );
	} else if( o->tooltip() == "cactus_w" ) {
		o->tooltip( "cactus_s" );
		o->image( img["cactus_s"] );
	} else if( o->tooltip() == "cactus_s" ) {
		o->tooltip( "cactus_e" );
		o->image( img["cactus_e"] );
	} else if( o->tooltip() == "cactus_e" ) {
		o->tooltip( "cactus_n" );
		o->image( img["cactus_n"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_cactus(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_cactus_i(o,v);
}

inline void CTrackEdUI::cb_mill_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "mill_n" ) {
		o->tooltip( "mill_e" );
		o->image( img["mill_e"] );
	} else if( o->tooltip() == "mill_e" ) {
		o->tooltip( "mill_s" );
		o->image( img["mill_s"] );
	} else if( o->tooltip() == "mill_s" ) {
		o->tooltip( "mill_w" );
		o->image( img["mill_w"] );
	} else if( o->tooltip() == "mill_w" ) {
		o->tooltip( "mill_n" );
		o->image( img["mill_n"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "mill_n" ) {
		o->tooltip( "mill_w" );
		o->image( img["mill_w"] );
	} else if( o->tooltip() == "mill_w" ) {
		o->tooltip( "mill_s" );
		o->image( img["mill_s"] );
	} else if( o->tooltip() == "mill_s" ) {
		o->tooltip( "mill_e" );
		o->image( img["mill_e"] );
	} else if( o->tooltip() == "mill_e" ) {
		o->tooltip( "mill_n" );
		o->image( img["mill_n"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_mill(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_mill_i(o,v);
}

inline void CTrackEdUI::cb_tree_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "tree_n" ) {
		o->tooltip( "tree_e" );
		o->image( img["tree_e"] );
	} else if( o->tooltip() == "tree_e" ) {
		o->tooltip( "tree_s" );
		o->image( img["tree_s"] );
	} else if( o->tooltip() == "tree_s" ) {
		o->tooltip( "tree_w" );
		o->image( img["tree_w"] );
	} else if( o->tooltip() == "tree_w" ) {
		o->tooltip( "tree_n" );
		o->image( img["tree_n"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "tree_n" ) {
		o->tooltip( "tree_w" );
		o->image( img["tree_w"] );
	} else if( o->tooltip() == "tree_w" ) {
		o->tooltip( "tree_s" );
		o->image( img["tree_s"] );
	} else if( o->tooltip() == "tree_s" ) {
		o->tooltip( "tree_e" );
		o->image( img["tree_e"] );
	} else if( o->tooltip() == "tree_e" ) {
		o->tooltip( "tree_n" );
		o->image( img["tree_n"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_tree(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_tree_i(o,v);
}

inline void CTrackEdUI::cb_tennis_big_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() ) {
	if( o->tooltip() == "tennis_big_v" ) {
		o->tooltip( "tennis_big_h" );
		o->image( img["tennis_big_h"] );
	} else if( o->tooltip() == "tennis_big_h" ) {
		o->tooltip( "tennis_big_v" );
		o->image( img["tennis_big_v"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_tennis_big(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_tennis_big_i(o,v);
}

inline void CTrackEdUI::cb_streetlight_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "streetlight_n" ) {
		o->tooltip( "streetlight_e" );
		o->image( img["streetlight_e"] );
	} else if( o->tooltip() == "streetlight_e" ) {
		o->tooltip( "streetlight_s" );
		o->image( img["streetlight_s"] );
	} else if( o->tooltip() == "streetlight_s" ) {
		o->tooltip( "streetlight_w" );
		o->image( img["streetlight_w"] );
	} else if( o->tooltip() == "streetlight_w" ) {
		o->tooltip( "streetlight_n" );
		o->image( img["streetlight_n"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "streetlight_n" ) {
		o->tooltip( "streetlight_w" );
		o->image( img["streetlight_w"] );
	} else if( o->tooltip() == "streetlight_w" ) {
		o->tooltip( "streetlight_s" );
		o->image( img["streetlight_s"] );
	} else if( o->tooltip() == "streetlight_s" ) {
		o->tooltip( "streetlight_e" );
		o->image( img["streetlight_e"] );
	} else if( o->tooltip() == "streetlight_e" ) {
		o->tooltip( "streetlight_n" );
		o->image( img["streetlight_n"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_streetlight(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_streetlight_i(o,v);
}

inline void CTrackEdUI::cb_house_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "house_n" ) {
		o->tooltip( "house_e" );
		o->image( img["house_e"] );
	} else if( o->tooltip() == "house_e" ) {
		o->tooltip( "house_s" );
		o->image( img["house_s"] );
	} else if( o->tooltip() == "house_s" ) {
		o->tooltip( "house_w" );
		o->image( img["house_w"] );
	} else if( o->tooltip() == "house_w" ) {
		o->tooltip( "house_n" );
		o->image( img["house_n"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "house_n" ) {
		o->tooltip( "house_w" );
		o->image( img["house_w"] );
	} else if( o->tooltip() == "house_w" ) {
		o->tooltip( "house_s" );
		o->image( img["house_s"] );
	} else if( o->tooltip() == "house_s" ) {
		o->tooltip( "house_e" );
		o->image( img["house_e"] );
	} else if( o->tooltip() == "house_e" ) {
		o->tooltip( "house_n" );
		o->image( img["house_n"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_house(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_house_i(o,v);
}

inline void CTrackEdUI::cb_skyscraper_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "skyscraper_n" ) {
		o->tooltip( "skyscraper_e" );
		o->image( img["skyscraper_e"] );
	} else if( o->tooltip() == "skyscraper_e" ) {
		o->tooltip( "skyscraper_s" );
		o->image( img["skyscraper_s"] );
	} else if( o->tooltip() == "skyscraper_s" ) {
		o->tooltip( "skyscraper_w" );
		o->image( img["skyscraper_w"] );
	} else if( o->tooltip() == "skyscraper_w" ) {
		o->tooltip( "skyscraper_n" );
		o->image( img["skyscraper_n"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "skyscraper_n" ) {
		o->tooltip( "skyscraper_w" );
		o->image( img["skyscraper_w"] );
	} else if( o->tooltip() == "skyscraper_w" ) {
		o->tooltip( "skyscraper_s" );
		o->image( img["skyscraper_s"] );
	} else if( o->tooltip() == "skyscraper_s" ) {
		o->tooltip( "skyscraper_e" );
		o->image( img["skyscraper_e"] );
	} else if( o->tooltip() == "skyscraper_e" ) {
		o->tooltip( "skyscraper_n" );
		o->image( img["skyscraper_n"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_skyscraper(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_skyscraper_i(o,v);
}

inline void CTrackEdUI::cb_snake_i(Fl_Button* o, void*) {
  if( Selected->image() == o->image() && Fl::event_button() == FL_LEFT_MOUSE ) {
	if( o->tooltip() == "snake_big_sn" ) {
		o->tooltip( "snake_big_we" );
		o->image( img["snake_big_we"] );
	} else if( o->tooltip() == "snake_big_we" ) {
		o->tooltip( "snake_big_ns" );
		o->image( img["snake_big_ns"] );
	} else if( o->tooltip() == "snake_big_ns" ) {
		o->tooltip( "snake_big_ew" );
		o->image( img["snake_big_ew"] );
	} else if( o->tooltip() == "snake_big_ew" ) {
		o->tooltip( "snake_big_sn" );
		o->image( img["snake_big_sn"] );
	}
	o->redraw();
} else if( Selected->image() == o->image() ) {
	if( o->tooltip() == "snake_big_sn" ) {
		o->tooltip( "snake_big_ew" );
		o->image( img["snake_big_ew"] );
	} else if( o->tooltip() == "snake_big_ew" ) {
		o->tooltip( "snake_big_ns" );
		o->image( img["snake_big_ns"] );
	} else if( o->tooltip() == "snake_big_ns" ) {
		o->tooltip( "snake_big_we" );
		o->image( img["snake_big_we"] );
	} else if( o->tooltip() == "snake_big_we" ) {
		o->tooltip( "snake_big_sn" );
		o->image( img["snake_big_sn"] );
	}
	o->redraw();
}

Selected->image( o->image() );
Selected->tooltip( o->tooltip() );

Selected->redraw();
}
void CTrackEdUI::cb_snake(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->parent()->user_data()))->cb_snake_i(o,v);
}

inline void CTrackEdUI::cb_Load_i(Fl_Button*, void*) {
  mainGroup->deactivate();
loadTrack->show();
}
void CTrackEdUI::cb_Load(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->user_data()))->cb_Load_i(o,v);
}

inline void CTrackEdUI::cb_Save_i(Fl_Button*, void*) {
  mainGroup->deactivate();
saveTrack->show();
}
void CTrackEdUI::cb_Save(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->user_data()))->cb_Save_i(o,v);
}

inline void CTrackEdUI::cb_New_i(Fl_Button*, void*) {
  mainGroup->deactivate();
newTrack->show();
}
void CTrackEdUI::cb_New(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->user_data()))->cb_New_i(o,v);
}

inline void CTrackEdUI::cb_vCells_i(Fl_Value_Input* o, void*) {
  if( o->value() > 99 ) o->value( 99 );
}
void CTrackEdUI::cb_vCells(Fl_Value_Input* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->user_data()))->cb_vCells_i(o,v);
}

inline void CTrackEdUI::cb_hCells_i(Fl_Value_Input* o, void*) {
  if( o->value() > 99 ) o->value( 99 );
}
void CTrackEdUI::cb_hCells(Fl_Value_Input* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->user_data()))->cb_hCells_i(o,v);
}

inline void CTrackEdUI::cb_ok_i(Fl_Button* o, void*) {
  Fl_Group* temp = TrackIcons;
Track->remove( TrackIcons );
delete temp;

int ox = Track->x() + 5;  // magic numbers own you :)
int oy = Track->y() + 5;

int w = (int)hCells->value();
int h = (int)vCells->value();

if( w < 1 ) w = 1;
if( h < 1 ) h = 1;

LoadTerrain( nter->value(), w, h );

TrackData.clear();
TrackIcons = new Fl_Group( ox, oy, 47*w, 47*h );
for( int x = 0; x < w; x++ ) {
	std::vector<Fl_Button*> col;
	for( int y = 0; y < h; y++ ) {
		Fl_Button *o = new Fl_Button( ox + x*47, oy + y*47, 47, 47 );
		if( tertype( x,y ) == MOUNTAIN ) {
			o->image( img["mountain"] );
			o->tooltip( "mountain" );
			o->deactivate( );
		} else if( tertype( x,y ) == WATER ) {
			o->image( img["water"] );
			o->tooltip( "water" );
			o->deactivate( );
		} else {
			o->image( empty->image() );
			o->tooltip( "empty" );
			o->callback( cellTemplate->callback() );
			o->when( FL_WHEN_RELEASE );
		}
		col.push_back( o );
		TrackIcons->add( o );
	}
	TrackData.push_back( col );
}
Track->add( TrackIcons );

Track->redraw();

newTrack->hide();
mainGroup->activate();
}
void CTrackEdUI::cb_ok(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->user_data()))->cb_ok_i(o,v);
}

inline void CTrackEdUI::cb_cancel_i(Fl_Button*, void*) {
  newTrack->hide();
mainGroup->activate();
}
void CTrackEdUI::cb_cancel(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->user_data()))->cb_cancel_i(o,v);
}

inline void CTrackEdUI::cb_cancel1_i(Fl_Button*, void*) {
  saveTrack->hide();
mainGroup->activate();
}
void CTrackEdUI::cb_cancel1(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->user_data()))->cb_cancel1_i(o,v);
}

inline void CTrackEdUI::cb_ok1_i(Fl_Button*, void*) {
  std::ofstream out( saveInternal->value() );

if( out != NULL ) {

	out << curTerrain << "\n";

	out << TrackData.size() << "\t";
	out << TrackData[0].size() << "\n";

	for( int i = 0; i < TrackIcons->children(); i++ ) {
		out << TrackIcons->child(i)->tooltip() << "\n";
	}

	saveTrack->hide();
	mainGroup->activate();

	out.close();
};
}
void CTrackEdUI::cb_ok1(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->user_data()))->cb_ok1_i(o,v);
}

inline void CTrackEdUI::cb_cancel2_i(Fl_Button*, void*) {
  saveTrack->hide();
mainGroup->activate();
}
void CTrackEdUI::cb_cancel2(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->user_data()))->cb_cancel2_i(o,v);
}

inline void CTrackEdUI::cb_ok2_i(Fl_Button*, void*) {
  std::ofstream out( saveStunts->value() );

if( out != NULL ) {

	transReload();

	out << "<!-- generated by Stunts2005 TrackEd -->\n\n";
	out << "<track>\n";
	out << "\t<objects>\n";

	int w = TrackData.size();
	int h = TrackData[0].size();

	for( int x = 0; x < TrackData.size(); x++ ) {
		for( int y = 0; y < TrackData[0].size(); y++ ) {
			translate( out, TrackData[y][x], y, x );
		}
	}

	out << "\t</objects>\n";
	out << "</track>\n";

	saveTrack->hide();
	mainGroup->activate();

};
}
void CTrackEdUI::cb_ok2(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->user_data()))->cb_ok2_i(o,v);
}

inline void CTrackEdUI::cb_cancel3_i(Fl_Button*, void*) {
  loadTrack->hide();
mainGroup->activate();
}
void CTrackEdUI::cb_cancel3(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->user_data()))->cb_cancel3_i(o,v);
}

inline void CTrackEdUI::cb_ok3_i(Fl_Button* o, void*) {
  std::ifstream in( loadInternal->value() );

if( in != NULL ) {
	int w, h;
	in >> curTerrain >> w >> h;

	Fl_Group* temp = TrackIcons;
	Track->remove( TrackIcons );
	delete temp;

	int ox = Track->x() + 5;  // magic numbers own you :)
	int oy = Track->y() + 5;

	if( w < 1 ) w = 1;
	if( h < 1 ) h = 1;

	TrackData.clear();
	TrackIcons = new Fl_Group( ox, oy, 47*w, 47*h );
	for( int x = 0; x < w; x++ ) {
		std::vector<Fl_Button*> col;
		for( int y = 0; y < h; y++ ) {
			std::string cur;
			in >> cur;
			Fl_Button *o = new Fl_Button( ox + x*47, oy + y*47, 47, 47 );

			if( cur == "water" ) {
				o->image( img["water"] );
				o->tooltip( "water" );
				o->deactivate();
			} else if( cur == "mountain" ) {
				o->image( img["mountain"] );
				o->tooltip( "mountain" );
				o->deactivate();
			} else {
				o->image( img[cur] );
				o->tooltip( img.find(cur)->first.c_str() );
				o->callback( cellTemplate->callback() );
				o->when( FL_WHEN_RELEASE );
			}
			col.push_back( o );
			TrackIcons->add( o );
		}
		TrackData.push_back( col );
	}
	Track->add( TrackIcons );

	Track->redraw();

	loadTrack->hide();
	mainGroup->activate();

	in.close();
};
}
void CTrackEdUI::cb_ok3(Fl_Button* o, void* v) {
  ((CTrackEdUI*)(o->parent()->parent()->parent()->user_data()))->cb_ok3_i(o,v);
}

CTrackEdUI::CTrackEdUI() {
  Fl_Window* w;
  { Fl_Window* o = mainWindow = new Fl_Window(794, 600, "Stunts2005 TrackEd");
    w = o;
    o->user_data((void*)(this));
    { Fl_Group* o = mainGroup = new Fl_Group(0, 0, 795, 600);
      o->box(FL_FLAT_BOX);
      { Fl_Tabs* o = new Fl_Tabs(0, 0, 225, 465);
        o->box(FL_PLASTIC_UP_BOX);
        { Fl_Group* o = new Fl_Group(5, 25, 219, 430, "Road");
          { Fl_Button* o = corner_big = new Fl_Button(35, 61, 94, 94, "corner big");
            o->callback((Fl_Callback*)cb_corner_big);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["corner_big_nw"] );
            o->tooltip( "corner_big_nw" );
            o->label( NULL );
          }
          { Fl_Button* o = corner_small = new Fl_Button(145, 61, 49, 49, "corner small");
            o->callback((Fl_Callback*)cb_corner_small);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["corner_small_nw"] );
            o->tooltip( "corner_small_nw" );
            o->label( NULL );
          }
          { Fl_Button* o = straight_line = new Fl_Button(145, 181, 49, 49, "straight line");
            o->callback((Fl_Callback*)cb_straight_line);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["straight_line_h"] );
            o->tooltip( "straight_line_h" );
            o->label( NULL );
          }
          { Fl_Button* o = empty = new Fl_Button(35, 181, 49, 49, "empty");
            o->tooltip("empty");
            o->callback((Fl_Callback*)cb_empty);
            o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
            o->image( img["empty"] );
            o->tooltip( "empty" );
            o->label( NULL );
          }
          { Fl_Button* o = cellTemplate = new Fl_Button(35, 228, 47, 47, "tmpl");
            o->tooltip("cellTemplate");
            o->callback((Fl_Callback*)cb_cellTemplate);
            o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
            o->hide();
            o->image( img["empty"] );
          }
          { Fl_Button* o = start_goal = new Fl_Button(90, 181, 49, 49, "start goal");
            o->callback((Fl_Callback*)cb_start_goal);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["start_goal_h"] );
            o->tooltip( "start_goal_h" );
            o->label( NULL );
          }
          { Fl_Button* o = tube_inout = new Fl_Button(25, 331, 49, 49, "tube inout");
            o->callback((Fl_Callback*)cb_tube_inout);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["tube_in_h"] );
            o->tooltip( "tube_in_h" );
            o->label( NULL );
          }
          { Fl_Button* o = tube = new Fl_Button(80, 331, 49, 49, "tube");
            o->callback((Fl_Callback*)cb_tube);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["tube_h"] );
            o->tooltip( "tube_h" );
            o->label( NULL );
          }
          { Fl_Button* o = tube_with_wall = new Fl_Button(25, 386, 49, 49, "tube with wall");
            o->callback((Fl_Callback*)cb_tube_with_wall);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["tube_with_wall_h"] );
            o->tooltip( "tube_with_wall_h" );
            o->label( NULL );
          }
          { Fl_Button* o = tunnel_inout = new Fl_Button(150, 331, 49, 49, "tunnel inout");
            o->callback((Fl_Callback*)cb_tunnel_inout);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["tunnel_out_v"] );
            o->tooltip( "tunnel_out_v" );
            o->label( NULL );
          }
          { Fl_Button* o = tunnel = new Fl_Button(150, 386, 49, 49, "tunnel");
            o->callback((Fl_Callback*)cb_tunnel);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["tunnel_v"] );
            o->tooltip( "tunnel_v" );
            o->label( NULL );
          }
          { Fl_Button* o = y_split = new Fl_Button(60, 256, 49, 49, "y split");
            o->callback((Fl_Callback*)cb_y_split);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["y_sn"] );
            o->tooltip( "y_sn" );
            o->label( NULL );
          }
          { Fl_Button* o = y_split_b = new Fl_Button(115, 256, 49, 49, "y split B");
            o->callback((Fl_Callback*)cb_y_split_b);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["y_b_sn"] );
            o->tooltip( "y_b_sn" );
            o->label( NULL );
          }
          { Fl_Button* o = screw = new Fl_Button(80, 386, 49, 49, "screw");
            o->callback((Fl_Callback*)cb_screw);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["screw_h"] );
            o->tooltip( "screw_h" );
            o->label( NULL );
          }
          o->end();
        }
        { Fl_Group* o = new Fl_Group(5, 25, 215, 430, "Bridge");
          o->hide();
          { Fl_Button* o = corner_bridge_big = new Fl_Button(15, 46, 94, 94, "corner bridge big");
            o->callback((Fl_Callback*)cb_corner_bridge_big);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["corner_bridge_big_nw"] );
            o->tooltip( "corner_bridge_big_nw" );
            o->label( NULL );
          }
          { Fl_Button* o = corner_bridge_small = new Fl_Button(60, 146, 49, 49, "corner bridge small");
            o->callback((Fl_Callback*)cb_corner_bridge_small);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["corner_bridge_small_nw"] );
            o->tooltip( "corner_bridge_small_nw" );
            o->label( NULL );
          }
          { Fl_Button* o = corner_bridge_big_b = new Fl_Button(115, 46, 94, 94, "corner bridge big B");
            o->callback((Fl_Callback*)cb_corner_bridge_big_b);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["corner_bridge_big_b_nw"] );
            o->tooltip( "corner_bridge_big_b_nw" );
            o->label( NULL );
          }
          { Fl_Button* o = corner_bridge_small_b = new Fl_Button(115, 146, 49, 49, "corner bridge small B");
            o->callback((Fl_Callback*)cb_corner_bridge_small_b);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["corner_bridge_small_b_nw"] );
            o->tooltip( "corner_bridge_small_b_nw" );
            o->label( NULL );
          }
          { Fl_Button* o = straight_line_bridge = new Fl_Button(85, 261, 49, 49, "straight line bridge");
            o->callback((Fl_Callback*)cb_straight_line_bridge);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["straight_line_bridge_v"] );
            o->tooltip( "straight_line_bridge_v" );
            o->label( NULL );
          }
          { Fl_Button* o = drive_down_bridge = new Fl_Button(85, 206, 49, 49, "drive down bridge");
            o->callback((Fl_Callback*)cb_drive_down_bridge);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["drive_down_bridge_v"] );
            o->tooltip( "drive_down_bridge_v" );
            o->label( NULL );
          }
          { Fl_Button* o = drive_up_bridge = new Fl_Button(85, 371, 49, 49, "drive up bridge");
            o->callback((Fl_Callback*)cb_drive_up_bridge);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["drive_up_bridge_v"] );
            o->tooltip( "drive_up_bridge_v" );
            o->label( NULL );
          }
          { Fl_Button* o = crossover = new Fl_Button(85, 316, 49, 49, "cross over");
            o->callback((Fl_Callback*)cb_crossover);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["crossover_v"] );
            o->tooltip( "crossover_v" );
            o->label( NULL );
          }
          o->end();
        }
        { Fl_Group* o = new Fl_Group(5, 25, 219, 430, "Other");
          o->hide();
          { Fl_Button* o = jump = new Fl_Button(55, 66, 49, 49, "jump");
            o->callback((Fl_Callback*)cb_jump);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["jump_sn"] );
            o->tooltip( "jump_sn" );
            o->label( NULL );
          }
          { Fl_Button* o = loop = new Fl_Button(115, 66, 49, 49, "loop");
            o->callback((Fl_Callback*)cb_loop);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["loop_v"] );
            o->tooltip( "loop_v" );
            o->label( NULL );
          }
          { Fl_Button* o = cactus = new Fl_Button(30, 146, 49, 49, "cactus");
            o->callback((Fl_Callback*)cb_cactus);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["cactus_n"] );
            o->tooltip( "cactus_n" );
            o->label( NULL );
          }
          { Fl_Button* o = mill = new Fl_Button(140, 146, 49, 49, "mill");
            o->callback((Fl_Callback*)cb_mill);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["mill_n"] );
            o->tooltip( "mill_n" );
            o->label( NULL );
          }
          { Fl_Button* o = tree = new Fl_Button(85, 146, 49, 49, "tree");
            o->callback((Fl_Callback*)cb_tree);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["tree_n"] );
            o->tooltip( "tree_n" );
            o->label( NULL );
          }
          { Fl_Button* o = tennis_big = new Fl_Button(65, 336, 94, 94, "tennis big");
            o->callback((Fl_Callback*)cb_tennis_big);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["tennis_big_h"] );
            o->tooltip( "tennis_big_h" );
            o->label( NULL );
          }
          { Fl_Button* o = streetlight = new Fl_Button(85, 256, 49, 49, "street light");
            o->callback((Fl_Callback*)cb_streetlight);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["streetlight_n"] );
            o->tooltip( "streetlight_n" );
            o->label( NULL );
          }
          { Fl_Button* o = house = new Fl_Button(110, 201, 49, 49, "house");
            o->callback((Fl_Callback*)cb_house);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["house_n"] );
            o->tooltip( "house_n" );
            o->label( NULL );
          }
          { Fl_Button* o = skyscraper = new Fl_Button(55, 201, 49, 49, "sky scraper");
            o->callback((Fl_Callback*)cb_skyscraper);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["skyscraper_n"] );
            o->tooltip( "skyscraper_n" );
            o->label( NULL );
          }
          o->end();
        }
        { Fl_Group* o = new Fl_Group(5, 25, 219, 430, "...");
          o->labelcolor(30);
          o->hide();
          { Fl_Button* o = snake = new Fl_Button(65, 71, 94, 94, "snake");
            o->callback((Fl_Callback*)cb_snake);
            o->align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE);
            o->image( img["snake_big_we"] );
            o->tooltip( "snake_big_we" );
            o->label( NULL );
          }
          o->end();
        }
        o->end();
      }
      { Fl_Group* o = new Fl_Group(215, 0, 580, 30);
        { Fl_Box* o = new Fl_Box(230, 0, 165, 25, "Stunts2005 Track Editor");
          o->labeltype(FL_EMBOSSED_LABEL);
          o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        }
        { Fl_Button* o = new Fl_Button(580, 0, 105, 25, "Load");
          o->box(FL_PLASTIC_UP_BOX);
          o->down_box(FL_PLASTIC_DOWN_BOX);
          o->callback((Fl_Callback*)cb_Load);
        }
        { Fl_Button* o = new Fl_Button(685, 0, 105, 25, "Save");
          o->box(FL_PLASTIC_UP_BOX);
          o->down_box(FL_PLASTIC_DOWN_BOX);
          o->callback((Fl_Callback*)cb_Save);
        }
        { Fl_Button* o = new Fl_Button(465, 0, 105, 25, "New");
          o->box(FL_PLASTIC_UP_BOX);
          o->down_box(FL_PLASTIC_DOWN_BOX);
          o->callback((Fl_Callback*)cb_New);
        }
        o->end();
      }
      { Fl_Scroll* o = Track = new Fl_Scroll(225, 25, 565, 570);
        o->type(7);
        o->box(FL_PLASTIC_UP_BOX);
        o->end();
        Fl_Group::current()->resizable(o);
      }
      { Fl_Group* o = new Fl_Group(0, 460, 225, 135, "Selected");
        o->box(FL_PLASTIC_UP_BOX);
        o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
        { Fl_Button* o = Selected = new Fl_Button(95, 470, 114, 115);
          o->tooltip("straight_line_h");
          o->box(FL_EMBOSSED_BOX);
          o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
          o->deactivate();
          o->image( img["empty"] );
          o->tooltip( "empty" );
        }
        o->end();
      }
      o->end();
    }
    o->end();
  }
  int ox = Track->x() + 5;  // magic numbers own you :)
int oy = Track->y() + 5;

TrackIcons = new Fl_Group( ox, oy, 47*30, 47*30 );

LoadTerrain( "terrain1", 30, 30 );

for( int x = 0; x < 30; x++ ) {
	std::vector<Fl_Button*> col;
	for( int y = 0; y < 30; y++ ) {
		Fl_Button *o = new Fl_Button( ox + x*47, oy + y*47, 47, 47 );
		if( tertype( x,y ) == MOUNTAIN ) {
			o->image( img["mountain"] );
			o->tooltip( "mountain" );
			o->deactivate( );
		} else if( tertype( x,y ) == WATER ) {
			o->image( img["water"] );
			o->tooltip( "water" );
			o->deactivate( );
		} else {
			o->image( empty->image() );
			o->tooltip( "empty" );
			o->callback( cellTemplate->callback() );
			o->when( FL_WHEN_RELEASE );
		}
		col.push_back( o );
		TrackIcons->add( o );
	}
	TrackData.push_back( col );
}

Track->add( TrackIcons );
Track->redraw();
  { Fl_Window* o = newTrack = new Fl_Window(201, 311, "New track...");
    w = o;
    o->user_data((void*)(this));
    { Fl_Group* o = new Fl_Group(10, 5, 185, 265);
      o->box(FL_PLASTIC_UP_BOX);
      { Fl_Value_Input* o = vCells = new Fl_Value_Input(35, 40, 25, 20, "vertical cells");
        o->minimum(2);
        o->maximum(80);
        o->step(1);
        o->value(30);
        o->callback((Fl_Callback*)cb_vCells);
        o->align(FL_ALIGN_RIGHT);
        o->deactivate();
      }
      { Fl_Value_Input* o = hCells = new Fl_Value_Input(35, 15, 25, 20, "horizontal cells");
        o->minimum(2);
        o->maximum(80);
        o->step(1);
        o->value(30);
        o->callback((Fl_Callback*)cb_hCells);
        o->align(FL_ALIGN_RIGHT);
        o->deactivate();
      }
      { Fl_Input* o = nter = new Fl_Input(70, 235, 115, 25, "Terrain:");
        o->value( "terrain5" );
      }
      { Fl_Browser* o = selterrain = new Fl_Browser(20, 90, 165, 140, "Available Terrains:");
        o->align(FL_ALIGN_TOP);
        o->when(3);
      }
      o->end();
    }
    { Fl_Button* o = new Fl_Button(130, 275, 65, 30, "ok");
      o->box(FL_PLASTIC_UP_BOX);
      o->down_box(FL_PLASTIC_DOWN_BOX);
      o->callback((Fl_Callback*)cb_ok);
    }
    { Fl_Button* o = new Fl_Button(10, 275, 65, 30, "cancel");
      o->box(FL_PLASTIC_UP_BOX);
      o->down_box(FL_PLASTIC_DOWN_BOX);
      o->callback((Fl_Callback*)cb_cancel);
    }
    o->set_modal();
    o->end();
  }
  std::map<std::string, tdata>::iterator i;
for( i = ters.begin(); i != ters.end(); i++ ) {
	selterrain->add( i->first.c_str() );
}
  { Fl_Window* o = saveTrack = new Fl_Window(510, 192, "Save track...");
    w = o;
    o->user_data((void*)(this));
    { Fl_Tabs* o = new Fl_Tabs(5, 5, 500, 185);
      o->box(FL_PLASTIC_UP_BOX);
      { Fl_Group* o = new Fl_Group(5, 30, 500, 155, "Internal format");
        { Fl_Button* o = new Fl_Button(15, 145, 95, 30, "cancel");
          o->box(FL_PLASTIC_UP_BOX);
          o->down_box(FL_PLASTIC_DOWN_BOX);
          o->callback((Fl_Callback*)cb_cancel1);
        }
        { Fl_Button* o = new Fl_Button(400, 145, 95, 30, "ok");
          o->box(FL_PLASTIC_UP_BOX);
          o->down_box(FL_PLASTIC_DOWN_BOX);
          o->callback((Fl_Callback*)cb_ok1);
        }
        { Fl_Input* o = saveInternal = new Fl_Input(15, 60, 480, 25, "Target filename:");
          o->align(FL_ALIGN_TOP_LEFT);
          o->value( "mytrack.ted" );
        }
        o->end();
      }
      { Fl_Group* o = new Fl_Group(5, 30, 500, 155, "Export to Stunts");
        o->hide();
        { Fl_Button* o = new Fl_Button(15, 145, 95, 30, "cancel");
          o->box(FL_PLASTIC_UP_BOX);
          o->down_box(FL_PLASTIC_DOWN_BOX);
          o->callback((Fl_Callback*)cb_cancel2);
        }
        { Fl_Button* o = new Fl_Button(400, 145, 95, 30, "ok");
          o->box(FL_PLASTIC_UP_BOX);
          o->down_box(FL_PLASTIC_DOWN_BOX);
          o->callback((Fl_Callback*)cb_ok2);
        }
        { Fl_Input* o = saveStunts = new Fl_Input(15, 60, 480, 25, "Target XML filename:");
          o->align(FL_ALIGN_TOP_LEFT);
          o->value( "mytrack.xml" );
        }
        o->end();
      }
      o->end();
    }
    o->set_modal();
    o->end();
  }
  { Fl_Window* o = loadTrack = new Fl_Window(510, 192, "Load track...");
    w = o;
    o->user_data((void*)(this));
    { Fl_Tabs* o = new Fl_Tabs(5, 5, 500, 183);
      o->box(FL_PLASTIC_UP_BOX);
      { Fl_Group* o = new Fl_Group(5, 30, 500, 155, "Internal format");
        { Fl_Button* o = new Fl_Button(15, 145, 95, 30, "cancel");
          o->box(FL_PLASTIC_UP_BOX);
          o->down_box(FL_PLASTIC_DOWN_BOX);
          o->callback((Fl_Callback*)cb_cancel3);
        }
        { Fl_Button* o = new Fl_Button(400, 145, 95, 30, "ok");
          o->box(FL_PLASTIC_UP_BOX);
          o->down_box(FL_PLASTIC_DOWN_BOX);
          o->callback((Fl_Callback*)cb_ok3);
        }
        { Fl_Input* o = loadInternal = new Fl_Input(15, 60, 480, 25, "Source filename:");
          o->align(FL_ALIGN_TOP_LEFT);
          o->value( "mytrack.ted" );
        }
        o->end();
      }
      { Fl_Group* o = new Fl_Group(5, 30, 500, 158, "Import from Stunts2005");
        o->hide();
        { Fl_Button* o = new Fl_Button(215, 125, 273, 45, "to be implemented.... (maybe)");
          o->box(FL_PLASTIC_UP_FRAME);
          o->down_box(FL_PLASTIC_DOWN_FRAME);
          o->labelfont(1);
        }
        o->end();
      }
      o->end();
    }
    o->set_modal();
    o->end();
  }
}

void CTrackEdUI::show( int argc, char *argv[] ) {
  mainWindow->show( argc, argv );
}

void CTrackEdUI::setCells( Fl_Button* o ) {
  std::string id = Selected->tooltip();
if( id.find("_big_",0) < id.size() ) {
	int i = TrackIcons->find( o );

	int w = TrackData.size();
	int h = TrackData[0].size();

	int i0, i1, i2, i3;
	if( id.substr( id.size() - 3 ) == "_se" ) {
		i0 = i - TrackData[0].size() - 1;
		i1 = i - 1;
		i2 = i - TrackData[0].size();
		i3 = i;
	} else if( id.substr( id.size() - 3 ) == "_ne" ) {
		i0 = i - TrackData[0].size();
		i1 = i;
		i2 = i - TrackData[0].size() + 1;
		i3 = i + 1;
	} else if( id.substr( id.size() - 3 ) == "_sw" ) {
		i0 = i - 1;
		i1 = i + TrackData[0].size() - 1;
		i2 = i;
		i3 = i + TrackData[0].size();
	} else {
		i0 = i;
		i1 = i + TrackData[0].size();
		i2 = i + 1;
		i3 = i + TrackData[0].size() + 1;
	}

	// make sure it fits in x direction
	if (i0 < 0 || i0 >= TrackIcons->children() ||
		i1 < 0 || i1 >= TrackIcons->children() ||
		i2 < 0 || i2 >= TrackIcons->children() ||
		i3 < 0 || i3 >= TrackIcons->children() ) return;

	int y0 = i0 % h;
	int y1 = i1 % h;
	int y2 = i2 % h;
	int y3 = i3 % h;

	// now y direction -------- correct later!
	if( y0 < 0 ) return;
	if( y1 < 0 ) return;
	if( y2 < 0 ) return;
	if( y3 < 0 ) return;

	Fl_Button* o0 = (Fl_Button*)TrackIcons->child(i0);
	Fl_Button* o1 = (Fl_Button*)TrackIcons->child(i1);
	Fl_Button* o2 = (Fl_Button*)TrackIcons->child(i2);
	Fl_Button* o3 = (Fl_Button*)TrackIcons->child(i3);

	// make sure they're all free
	if( o0->active() != true ||
		o1->active() != true ||
		o2->active() != true ||
		o3->active() != true ) return;

	clearCells( o0 );
	clearCells( o1 );
	clearCells( o2 );
	clearCells( o3 );

	o0 -> tooltip( img.find(id + "_0")->first.c_str() );
	o1 -> tooltip( img.find(id + "_1")->first.c_str() );
	o2 -> tooltip( img.find(id + "_2")->first.c_str() );
	o3 -> tooltip( img.find(id + "_3")->first.c_str() );
	o0 -> image( img[id + "_0"] );
	o1 -> image( img[id + "_1"] );
	o2 -> image( img[id + "_2"] );
	o3 -> image( img[id + "_3"] );

	o0->redraw();
	o1->redraw();
	o2->redraw();
	o3->redraw();
} else {
	clearCells( o );
	o->image( Selected->image() );
	o->tooltip( Selected->tooltip() );
	o->redraw();
}
}

void CTrackEdUI::clearCells( Fl_Button* o ) {
  std::string id = o->tooltip();
if( id.find("_big_",0) < id.size() ) {
	int i = TrackIcons->find( o );

	int w = TrackData.size();
	int h = TrackData[0].size();

	int i0, i1, i2, i3;
	if( id.substr( id.size() - 2 ) == "_0" ) {
		i0 = i;
		i1 = i + TrackData[0].size();
		i2 = i + 1;
		i3 = i + TrackData[0].size() + 1;
	} else if( id.substr( id.size() - 2 ) == "_1" ) {
		i0 = i - TrackData[0].size();
		i1 = i;
		i2 = i - TrackData[0].size() + 1;
		i3 = i + 1;
	} else if( id.substr( id.size() - 2 ) == "_2" ) {
		i0 = i - 1;
		i1 = i + TrackData[0].size() - 1;
		i2 = i;
		i3 = i + TrackData[0].size();
	} else {
		i0 = i - TrackData[0].size() - 1;
		i1 = i - 1;
		i2 = i - TrackData[0].size();
		i3 = i;
	}

	// make sure it fits in x direction
	if (i0 < 0 || i0 > TrackIcons->children() ||
		i1 < 0 || i1 > TrackIcons->children() ||
		i2 < 0 || i2 > TrackIcons->children() ||
		i3 < 0 || i3 > TrackIcons->children() ) return;

	int y0 = i0 % h;
	int y1 = i0 % h;
	int y2 = i0 % h;
	int y3 = i0 % h;

	// now y direction
	if( y0 < 0 || (y0 > w && i0 != 0) ) return;
	if( y1 < 0 || (y1 > w && i1 != 0) ) return;
	if( y2 < 0 || (y2 > w && i2 != 0) ) return;
	if( y3 < 0 || (y3 > w && i3 != 0) ) return;

	Fl_Button* o0 = (Fl_Button*)TrackIcons->child(i0);
	Fl_Button* o1 = (Fl_Button*)TrackIcons->child(i1);
	Fl_Button* o2 = (Fl_Button*)TrackIcons->child(i2);
	Fl_Button* o3 = (Fl_Button*)TrackIcons->child(i3);

	o0 -> tooltip( "empty" );
	o1 -> tooltip( "empty" );
	o2 -> tooltip( "empty" );
	o3 -> tooltip( "empty" );
	o0 -> image( img["empty"] );
	o1 -> image( img["empty"] );
	o2 -> image( img["empty"] );
	o3 -> image( img["empty"] );

	o0->redraw();
	o1->redraw();
	o2->redraw();
	o3->redraw();
} else {
	o->image( empty->image() );
	o->tooltip( empty->tooltip() );
	o->redraw();
}
}
